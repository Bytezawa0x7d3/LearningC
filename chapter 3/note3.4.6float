浮点类型 float, double, long double
浮点类型能表示包括小数在内的更大范围的数
浮点数的表示类似于科学计数法
该计数系统常用来表示非常大或者非常小的数字
数字：322.56
科学计数法：3.2256*10^2
指数计数法：3.2256e2


float 浮点类型
至少能表示6位有效数字 （必须能够表示33.333333的前六位数字而非小数点后六位）
取值范围至少是[10^-37, 10^37] （便于表示太阳质量2.0e30kg或者电子电荷量1.6e-19c）
大多系统使用32位存储一个float类型的变量 8位表示指数值和符号 24位表示非指数部分和其符号


double 双精度类型
至少必须能表示10位有效数字
取值范围与float类型相同
大多系统用64位存储一个double类型的变量
有些系统用32位全部表示非指数部分 提高精度 减少舍入误差
有些则分配给指数部分 以容纳更大的数 增加了可表示的范围
但不论如何 double类型都至少有13位有效数字 超过了C标准


long double 长双精度类型
此类型用于满足比double类型更高的精度的要求
但C标准只保证long double和double的精度相同


浮点型变量声明
float noah, jonah;
double troublel
float planck = 6.63e-34;
long double gnp;


浮点型常量
有符号的数字（非指数部分） + E或者e + 有符号的数字（指数部分）
以下列举两个有效的浮点型常量
-1.56E+12
2.87e-3


其他书写规则
可以省略正号+
可以省略小数点 （2E5）
可以省略指数部分 （19.28）
不可同时省略小数点和指数部分
可以省略小数部分 （3.E16）
可以省略整数部分 （.45E-6）
不可同时省略小数点和指数部分
不可在浮点类型中加空格


编译器默认
一般情况下编译器假定浮点常量是double类型的精度
some = 4.0 * 2.0;
通常此处的2.0和4.0以double类型存储
使用双精度进行乘法运算
最后将乘积截断为float类型的宽度 此运算方法精度高速度慢
浮点数后加f或者F可覆盖默认规则 编译器会将浮点常量看作float类型 例如 2.3f 9.11E9F
浮点数后加l或L可以使之为long double类型 例如 54.3l 4.32L 
没有后缀的浮点数将被自动视为double类型


P计数法 浮点数常量的十六进制表示
用P和p代替E和e 用2的幂代替10的幂 如下例所示
0xa.1fp10
十六进制a等于十进制10
.1f是1/16加上15/256
p10是2^10=1024
所以 0xa.1fp10 = （10 + 1/16 + 15/256） * 1024 = 10364.0
